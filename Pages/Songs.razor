@page "/songs"

@using BlazorSongList.Models
@using BlazorSongList.Data
@inject SongService songService

<h1>Song List Database</h1>

<p>This component demonstrates managing a Song List.</p>

@if (songs == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#exampleModal">Add</button>
    <table class="table">
        <thead>
            <tr>
                <th>ID</th>
                <th>Title (C)</th>
                <th>Artist(F)</th>
                <th>Year</th>
                <th></th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in songs)
            {
                <tr>
                    <td>@item.SongId</td>
                    <td>@item.Title</td>
                    <td>@item.Artist</td>
                    <td>@item.Year</td>
                    <td><button type="button" class="btn btn-success">Edit</button></td>
                    <td><button type="button" class="btn btn-danger">Delete</button></td>
                </tr>
            }
        </tbody>
    </table>

    <div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">Modal title</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="input-group input-group-sm mb-3">
                        <div class="input-group-prepend">
                            <span class="input-group-text" id="inputGroup-sizing-sm">Song ID</span>
                        </div>
                        <input type="text" class="form-control" aria-label="Small" aria-describedby="inputGroup-sizing-sm" @bind-value=SongID>
                    </div>
                    <div class="input-group input-group-sm mb-3">
                        <div class="input-group-prepend">
                            <span class="input-group-text" id="inputGroup-sizing-sm">Title</span>
                        </div>
                        <input type="text" class="form-control" aria-label="Small" aria-describedby="inputGroup-sizing-sm" @bind-value=Title>
                    </div>
                    <div class="input-group input-group-sm mb-3">
                        <div class="input-group-prepend">
                            <span class="input-group-text" id="inputGroup-sizing-sm">Artist</span>
                        </div>
                        <input type="text" class="form-control" aria-label="Small" aria-describedby="inputGroup-sizing-sm" @bind-value=Artist>
                    </div>
                    <div class="input-group input-group-sm mb-3">
                        <div class="input-group-prepend">
                            <span class="input-group-text" id="inputGroup-sizing-sm">Year</span>
                        </div>
                        <input type="text" class="form-control" aria-label="Small" aria-describedby="inputGroup-sizing-sm" @bind-value=Year>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    <button type="button" class="btn btn-primary" @onclick="@Add">Save changes</button>
                </div>
            </div>
        </div>
    </div>
    
}

@code {
    List<Song> songs { get; set; } = new List<Song>();
    private string SongID;
    private string Title;
    private string Artist;
    private string Year;

    protected override void OnInitialized()
    {
        load();
    }

    private async Task load()
    {
        var data = new Song();
        data.SongId = "1";
        data.Title = "Sample";
        data.Artist = "Sample";
        data.Year = "2023";
        songs.Add(data);
    }



    private void Edit()
    {

    }
    private void Delete()
    {
        
        
    }

    private void Add()
    {
        var data = new Song();
        data.SongId = SongID;
        data.Title = Title;
        data.Artist = Artist;
        data.Year = Year;
        songs.Add(data);
    }
   

}

